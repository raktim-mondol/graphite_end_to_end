version: '3.8'

services:
  graphite:
    build: .
    image: graphite:latest
    container_name: graphite-pipeline
    
    # GPU support
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    
    # Environment variables
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - PYTHONPATH=/workspace
      - CUDA_VISIBLE_DEVICES=0
    
    # Volume mounts
    volumes:
      - ./dataset:/workspace/dataset:rw                    # Dataset directory
      - ./training_step_1/mil_classification/output:/workspace/training_step_1/mil_classification/output:rw
      - ./training_step_2/self_supervised_training/output:/workspace/training_step_2/self_supervised_training/output:rw
      - ./visualization_step_1/xai_visualization/output:/workspace/visualization_step_1/xai_visualization/output:rw
      - ./visualization_step_2/fusion_visualization/output:/workspace/visualization_step_2/fusion_visualization/output:rw
      - ./logs:/workspace/logs:rw                          # Logs directory
      - ./notebooks:/workspace/notebooks:rw                # Jupyter notebooks
      # Port mappings
    ports:
      - "8888:8888"     # Jupyter Notebook
      - "8080:8080"     # Additional web interface
    
    # Working directory
    working_dir: /workspace
    
    # Keep container running
    tty: true
    stdin_open: true
    
    # Resource limits
    shm_size: '2g'
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import torch; print(torch.cuda.is_available())"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Separate service for Jupyter
  jupyter:
    build: .
    image: graphite:latest
    container_name: graphite-jupyter
    
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - PYTHONPATH=/workspace
    
    volumes:
      - ./dataset:/workspace/dataset:ro                    # Read-only dataset access
      - ./notebooks:/workspace/notebooks:rw                # Jupyter notebooks
      - ./training_step_1/mil_classification/output:/workspace/training_step_1/mil_classification/output:ro
      - ./training_step_2/self_supervised_training/output:/workspace/training_step_2/self_supervised_training/output:ro
      - ./visualization_step_1/xai_visualization/output:/workspace/visualization_step_1/xai_visualization/output:ro
      - ./visualization_step_2/fusion_visualization/output:/workspace/visualization_step_2/fusion_visualization/output:ro
    
    ports:
      - "8889:8888"     # Jupyter on different port
    
    working_dir: /workspace
    
    command: >
      bash -c "
        jupyter notebook 
        --ip=0.0.0.0 
        --port=8888 
        --no-browser 
        --allow-root 
        --NotebookApp.token='' 
        --NotebookApp.password=''
      "
      profiles:
      - jupyter  # Only start with: docker-compose --profile jupyter up

# Named volumes for persistent data
volumes:
  dataset_volume:
    driver: local
  models_volume:
    driver: local
  logs_volume:
    driver: local

# Networks
networks:
  default:
    driver: bridge 